[{
  "name": "exit",
  "aliases": ["quit"],
  "signatures": ["(exit)", "(exit <integer-exit-code>)"],
  "description": "Terminate the current EScheme session with <integer-exit-code> (defaults to 0).",
  "example": null
}, {
  "name": "load",
  "aliases": null,
  "signatures": ["(load <filename-str>)"],
  "description": "Reads and evaluates <filename-str>'s EScheme contents in the global environment.\nNote that <load-from> should be used if <filename-str> is a relative path.",
  "example": null
}, {
  "name": "load-from",
  "aliases": null,
  "signatures": ["(load-from <directory-str> <filename-str>)"],
  "description": "Loads the <filename-str> in <directory-str> as EScheme code in the global\nenvironment. Use:\n\n(load-from #path <filename-str>)\n\nas a portable alternative to (load <filename-str>) if <filename-str> is a\nrelative path, since <load> only operates relative to (current-directory).",
  "example": null
}, {
  "name": "system",
  "aliases": null,
  "signatures": [
                  "(system <command-str>)",
                  "(system <command-str> <env-var-str-list>)",
                  "(system <command-str> <env-var-str-list> <directory-str>)"
                ],
  "description": "Executes a command, using the environment variable bindings in\n<env-var-str-list> (defaults to the current environment), in\nthe <directory-str> directory (defaults to the current working directory).\nPassed to Java's <Runtime.getRuntime().exec()>.\nReturns a list:\n  (<command-stdout-str> <command-stderr-str> <command-exit-code>)",
  "example": null
}]