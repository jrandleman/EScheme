[{
  "name": "number->string",
  "aliases": null,
  "signatures": ["(number->string <num>)", "(number->string <num> <radix>)"],
  "description": "Convert a number to a string in base <radix> (defaults to 10).\n<radix> must be between <*min-radix*> and <*max-radix*>.\nReturns #f if failed coercion.",
  "example": null
}, {
  "name": "string->number",
  "aliases": null,
  "signatures": ["(string->number <str>)", "(string->number <str> <radix>)"],
  "description": "Convert a string to a number in base <radix> (defaults to 10).\n<radix> must be between <*min-radix*> and <*max-radix*>.\nReturns #f if failed coercion.",
  "example": null
}, {
  "name": "keyword->symbol",
  "aliases": null,
  "signatures": ["(keyword->symbol <keyword>)"],
  "description": "Convert a keyword to a symbol.",
  "example": null
}, {
  "name": "symbol->keyword",
  "aliases": null,
  "signatures": ["(symbol->keyword <sym>)"],
  "description": "Convert a symbol to a keyword.",
  "example": null
}, {
  "name": "string->symbol",
  "aliases": null,
  "signatures": ["(string->symbol <str>)"],
  "description": "Convert a string to a symbol.",
  "example": null
}, {
  "name": "symbol->string",
  "aliases": null,
  "signatures": ["(symbol->string <sym>)"],
  "description": "Convert a symbol to a string.",
  "example": null
}, {
  "name": "string->keyword",
  "aliases": null,
  "signatures": ["(string->keyword <str>)"],
  "description": "Convert a string to a keyword.",
  "example": null
}, {
  "name": "keyword->string",
  "aliases": null,
  "signatures": ["(keyword->string <keyword>)"],
  "description": "Convert a keyword to a string.",
  "example": null
}, {
  "name": "vector->list",
  "aliases": null,
  "signatures": ["(vector->list <vector>)"],
  "description": "Convert a vector to a list.",
  "example": null
}, {
  "name": "list->vector",
  "aliases": null,
  "signatures": ["(list->vector <list>)"],
  "description": "Convert a list to a vector.",
  "example": null
}, {
  "name": "vector->hashmap",
  "aliases": null,
  "signatures": ["(vector->hashmap <vector>)"],
  "description": "Convert a vector of keys & values to a hashmap.",
  "example": null
}, {
  "name": "hashmap->vector",
  "aliases": null,
  "signatures": ["(hashmap->vector <hashmap>)"],
  "description": "Convert a hashmap to a vector of keys & values.",
  "example": null
}, {
  "name": "hashmap->list",
  "aliases": null,
  "signatures": ["(hashmap->list <hashmap>)"],
  "description": "Convert a hashmap to a list of keys & values.",
  "example": null
}, {
  "name": "list->hashmap",
  "aliases": null,
  "signatures": ["(list->hashmap <list>)"],
  "description": "Convert a list of keys & values to a hashmap.",
  "example": null
}, {
  "name": "vector->string",
  "aliases": null,
  "signatures": ["(vector->string <vector>)"],
  "description": "Convert a vector of chars to a string.",
  "example": null
}, {
  "name": "string->vector",
  "aliases": null,
  "signatures": ["(string->vector <string>)"],
  "description": "Convert a string to a vector of chars.",
  "example": null
}, {
  "name": "string->list",
  "aliases": null,
  "signatures": ["(string->list <string>)"],
  "description": "Convert a string to a list of chars.",
  "example": null
}, {
  "name": "list->string",
  "aliases": null,
  "signatures": ["(list->string <list>)"],
  "description": "Convert a list of chars to a string.",
  "example": null
}, {
  "name": "char->integer",
  "aliases": null,
  "signatures": ["(char->integer <char>)"],
  "description": "Convert a char to an integer codepoint value.",
  "example": null
}, {
  "name": "integer->char",
  "aliases": null,
  "signatures": ["(integer->char <integer>)"],
  "description": "Convert an integer codepoint value to a char.",
  "example": null
}, {
  "name": "write-to-string",
  "aliases": null,
  "signatures": ["(write-to-string <obj>)"],
  "description": "Serialize <obj> in machine-readable form.",
  "example": null
}, {
  "name": "display-to-string",
  "aliases": null,
  "signatures": ["(display-to-string <obj>)"],
  "description": "Serialize <obj> in human-readable form.",
  "example": null
}, {
  "name": "pretty-print-to-string",
  "aliases": ["pprint-to-string"],
  "signatures": ["(pretty-print-to-string <obj>)"],
  "description": "Serialize <obj> in indented, machine-readable form.\nAliased by <pprint-to-string>.",
  "example": null
}]